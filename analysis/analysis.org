# -*- org-refile-targets: ((nil :maxlevel . 5)); -*-
#+STARTUP: showall hideblocks shrink
#+PROPERTY: header-args:bibtex :tangle "exports/references.bib"
#+PROPERTY: header-args:ruby :tangle "preprocess.rb"
#+PROPERTY: header-args:R :session r :width 7 :height 7 :tangle "analyze.R"
#+PRIORITIES: 1 3 2
#+PROPERTY: LOGGING nil
* A Classification-Based Survey of Existing Firmware Research: corpus
:PROPERTIES:
:ID:       3F8C60E5-5711-416E-BE34-0296AD8E2889
:P_analyses_ALL: static dynamic symbolic-execution taint
:P_fw_types_ALL: linux non-linux unknown
:P_scraping_approaches_ALL: vendor-website FTP custom-search user-submission existing-dataset app-store direct-approach own-generation unknown
:P_whats_analysed_ALL: code config credentials interfaces
:ORDERED:  nil
:NOBLOCKING: t
:END:
It's best to read this document in an Org reader (such as Emacs), otherwise some links may be broken.

This document contains two parts:
- [[*Analysis][Analysis]]: statistical analysis of corpus, extracting information & generating tables/plots
- [[*Papers][Papers]]: list of papers included in the study with their information

With ~org-babel-tangle~, three files are generated:
- [[file:exports/references.bib][exports/references.bib]]: bibtex data for the papers in the corpus
- [[file:preprocess.rb][preprocess.rb]]: Ruby script to convert the [[file:exports/extracted.json][extracted.json]] (created in [[*Extract from this document into JSON][this elisp code]]) into a format that's easier to analyze, generating [[file:exports/corpus.json][exports/corpus.json]] and [[file:exports/corpus2.tsv][exports/corpus2.tsv]].
- [[file:analyze.R][analyze.R]]: R script to analyze the [[file:exports/corpus2.tsv][corpus]] and generate plots/tables in [[file:exports/][exports/]]

** Analysis
*** Preprocessing
:PROPERTIES:
:VISIBILITY: folded
:END:
**** Extract from this document into JSON
Extract the properties from this document:

#+begin_src emacs-lisp :tangle no :results file :file exports/extracted.json :file-desc "Exported corpus (JSON)"
  (require 'json)
  (let* (;; the predicate on which to filter entries: individual properties starting with P_ + the item text
         (pred (lambda (e) (and (or (string-match-p "^P_" (car e))
                                    (string= "ITEM" (car e))
                                    (string= "NOTER_DOCUMENT" (car e)))
                                (not (string-match-p "_ALL$" (car e))))))

         ;; in this function bind org-trust-scanner-tags around org-entry-properties for a speedup (see docstring of org-map-entries)
         ;; the lambda takes no argument because org-map-entries moves cursor instead
         (process-entry (lambda () (let ((entries-with-props (let ((org-trust-scanner-tags t)) (org-entry-properties)))
                                         (priority (or (nth 3 (org-heading-components)) ?0)))
                                     (append (seq-filter pred entries-with-props) `(("PRIORITY" . ,(char-to-string priority))))))))

    ;; write it out as a JSON file for later processing
    (json-encode (org-map-entries process-entry)))
#+end_src

#+RESULTS:
[[file:exports/extracted.json][Exported corpus (JSON)]]

**** Create 2 large tables for inclusion in paper
#+begin_src ruby :results none :session ruby
    require 'json'
    infile = 'exports/extracted.json'
    abort("File #{infile} not readable") unless File.readable? infile
    data = JSON.load_file(infile)
    data.select! { |e| e.keys.any? { |k| k =~ /^P_/ } }
    data.map! do |h|
      h.reduce(Hash.new) do |paper_info, (prop, v)|
        prop_formatted = prop.downcase.delete_prefix('p_')

        unless ['devices', 'priority', 'item'].include? prop_formatted
          v = 'both LB and NLB' if prop_formatted == 'fw_types' && v == 'linux non-linux'
          v = "\\citeauthor{#{v.delete_prefix('papers/').delete_suffix('.pdf')}} \\cite{#{v.delete_prefix('papers/').delete_suffix('.pdf')}}" if prop_formatted == 'noter_document'
          v = v.split.map { |arch| arch =~ /ARM/ ? 'ARM' : arch }.uniq.join(' ') if prop_formatted == 'isa'
          paper_info[prop_formatted] = v
        end

        paper_info
      end
    end
    data.sort_by! { -(_1['n_analysed'].to_i) }

    cols = [['noter_document', 'Document'],
            ['devices_sector', 'Sector'],
            ['dataset', 'Dataset status'],
            ['isa', 'ISAs'],
            ['n_analysed', '\\# Analyzed'],
            ['n_scraped', '\\# Scraped'],
            ['whats_analysed', 'Analysis focus'],
            ['scraping_approaches', 'Scraping approaches'],
            ['analyses', 'Analysis types']]


    preamble = ->(fwtype) {
      <<~EOF
             \\begin{table*}[]
             \\resizebox{\\linewidth}{!}{%
             \\begin{tabular}{@{} l l l l r r l l l @{}}
             \\toprule
             #{cols.map(&:last).flatten.map { |s| "\\textbf{#{s}}" }.join(" & ")} \\\\
       EOF
    }

    postamble = ->(fwtype) {
      <<~EOF
      \\bottomrule
           \\end{tabular}%
  }
               \\caption{Categorisation of past research analyzing #{fwtype} firmware.}
             \\label{tab:bigtable-#{fwtype}}
  \\end{table*}
      EOF
    }

    ['non-Linux', 'Linux', 'both LB and NLB'].each do |fwtype|
      result = data.select {|d| d['fw_types'].downcase == fwtype.downcase }.reduce(preamble[fwtype]) do |result, h|
        <<~EOF
        #{result}
        \\midrule
        #{cols.map(&:first).flatten.map { |c| h[c].nil? ? '-' : h[c].split(' ').map { |x| x.gsub(/-/, ' ') }.join(', ') }.join(" & ")} \\\\
        EOF
      end + postamble[fwtype]
      File.write("exports/tables/bigtable-#{fwtype}.tex", result)
    end
#+end_src

**** Prepare a TSV for R
#+begin_src ruby :results none :session ruby
  require 'json'
  infile = 'exports/extracted.json'
  abort("File #{infile} not readable") unless File.readable? infile

  data = JSON.load_file(infile)
  data.select! { |e| e.keys.any? { |k| k =~ /^P_/ } }
  data.map! do |d|
    h = d.reduce(Hash.new) do |paper_info, (prop, v)|
      prop_formatted = prop.downcase.delete_prefix('p_')
      case prop_formatted
      # numeric properties
      when 'n_scraped', 'n_analysed', 'priority', 'pct_nlb', 'pct_lb'
        paper_info[prop_formatted] = (Integer(v) rescue -1)
      when 'noter_document' # skip
        paper_info
      when 'item'
        paper_info[prop_formatted] = v
      when 'devices'
        paper_info[prop_formatted] = v.gsub('"', '').split(', ')
      else
        paper_info[prop_formatted] = v.split
      end
      paper_info
    end
    h['n_scraped'] = -1 unless h['n_scraped']
    h['n_analysed'] = -1 unless h['n_analysed']
    h['pct_lb'] = -1 unless h['pct_lb']
    h['pct_nlb'] = -1 unless h['pct_nlb']
    h
  end

  tsv_header = data.map(&:keys).flatten.uniq

  tsv_lines = data.reduce([tsv_header.join("\t")]) do |finstr, d|
    s = tsv_header.reduce([]) do |arr, h|
      if d[h].is_a? Array
        arr << d[h].join(',')
      else
        arr << d[h].to_s
      end
    end
    finstr << s.join("\t")
  end

  File.write 'exports/corpus2.tsv', tsv_lines.join("\n")
#+end_src


*** Analysing
**** Analysis
We write results to a file in ~exports/numbers/~:

#+begin_src R :results none
  write_result = function(data, name) {
    write(data, paste0('./exports/numbers/', name, '.tex'))
  }

#+end_src

Use the following libraries:

#+begin_src R :results none
  library(tidyverse)
  library(xtable)
#+end_src

Some options for xtable export:
#+begin_src R :results none
  xtable.opt.subtable = function() {
    options(xtable.type='latex',
            xtable.include.rownames=FALSE,
            xtable.floating.environment='subtable',
            xtable.table.placement='t')
  }
  xtable.opt.table = function() {
    options(xtable.type='latex',
            xtable.include.rownames=FALSE,
            xtable.floating.environment='table',
            xtable.table.placement='tb')
  }
#+end_src

We now have a [[file:exports/corpus2.tsv][corpus]].

#+begin_src R
  rows = nrow(read_tsv('exports/corpus2.tsv'))
  write_result(rows, 'total-number-of-papers')
  rows
#+end_src

#+RESULTS:
: 34

The corpus has Linux and non-Linux/both firmware research:

#+begin_src R
  counts = read_tsv('exports/corpus2.tsv') %>% count(fw_types)

  linux_only = counts[counts$fw_types == 'linux', 'n'] %>% as.numeric()
  write_result(linux_only, 'total-linux-only')

  nonlinux_only = counts[counts$fw_types == 'non-linux', 'n'] %>% as.numeric()
  write_result(nonlinux_only, 'total-nonlinux-only')

  both = counts[counts$fw_types == 'linux,non-linux', 'n'] %>% as.numeric()
  write_result(both, 'total-both-only')

  nonlinux = both + nonlinux_only
  write_result(nonlinux, 'total-not-only-linux')

  sprintf("Linux only: %s\nNon-linux only: %s\nboth only: %s\nNot only Linux: %s", linux_only, nonlinux_only, both, nonlinux)
#+end_src

#+RESULTS:
| Linux only: 14     |
| Non-linux only: 11 |
| both only: 9       |
| Not only Linux: 20 |

Let's say a large-scale study is one with over 500 samples analysed:

#+begin_src R :results none
  LARGE_SCALE_THRESHOLD = 500 # samples
  write_result(LARGE_SCALE_THRESHOLD, 'const-large-scale-thresh')
#+end_src

The questions we want to answer:

***** how many samples do non-Linux studies vs Linux studies analyze?
:PROPERTIES:
:VISIBILITY: folded
:END:

How many were large scale?

#+begin_src R
  t = read_tsv('exports/corpus2.tsv') %>%
    filter(n_analysed > LARGE_SCALE_THRESHOLD) %>%
    select(fw_types) %>%
    count(fw_types) %>%
    mutate(fw_types=case_match(fw_types,
                               'linux' ~ 'Linux',
                               'linux,non-linux' ~ 'Both',
                               'non-linux' ~ 'Non-Linux'))

  large_scale_nlb = as.numeric(t[t$fw_types == 'Non-Linux', 'n'])
  write_result(large_scale_nlb, 'non-linux-num-large-scale')

  large_scale_lb = as.numeric(t[t$fw_types == 'Linux', 'n'])
  write_result(large_scale_lb, 'linux-num-large-scale')

  large_scale_both = as.numeric(t[t$fw_types == 'Both', 'n'])
  write_result(large_scale_both, 'both-num-large-scale')

  write_result(large_scale_nlb + large_scale_both, 'non-linux-and-both-num-large-scale')

  sprintf("LB %d, NLB %d, Both %d", large_scale_lb, large_scale_nlb, large_scale_both)
#+end_src

#+RESULTS:
: LB 8, NLB 2, Both 4

Maybe as a table:

#+begin_src R :colnames yes
  res = read_tsv('exports/corpus2.tsv') %>%
    select(fw_types, n_analysed) %>%
    mutate(samples=case_when(
             n_analysed <= 10 ~ '<= 10',
             n_analysed > 10 & n_analysed <= 50 ~ '11-50',
             n_analysed > 50 & n_analysed <= 100 ~ '51-100',
             n_analysed > 100 & n_analysed <= 500 ~ '101-500',
             n_analysed > 500 ~ '> 500')) %>%
    count(fw_types, samples) %>%
    transmute(fw_types=case_match(fw_types, 'linux' ~ 'LB', 'linux,non-linux' ~ 'Both', 'non-linux' ~ 'NLB'), `Firmware samples`=samples, n=n) %>%
    pivot_wider(names_from=fw_types, values_from=n, values_fill=0) %>%
    arrange(factor(`Firmware samples`, levels=c('<= 10', '11-50', '51-100', '101-500', '> 500'))) %>%
    mutate(Total=LB+Both+NLB) %>%
    relocate(`Firmware samples`, 'LB', 'NLB', 'Both', 'Total')
#+end_src

#+RESULTS:
| Firmware samples | LB | NLB | Both | Total |
|------------------+----+-----+------+-------|
|            <= 10 |  2 |   5 |    2 |     9 |
|            11-50 |  3 |   2 |    0 |     5 |
|           51-100 |  0 |   2 |    3 |     5 |
|          101-500 |  1 |   0 |    0 |     1 |
|            > 500 |  8 |   2 |    4 |    14 |

#+begin_src R :colnames yes :results output file :file exports/tables/num-samples-binned.tex
  xtable.opt.table()
  xtable(res, caption='LB and NLB firmware studies by number of samples ($>$ 500 is considered large-scale).', label='tab:num-samples-binned')
#+end_src

#+RESULTS:
[[file:exports/tables/num-samples-binned.tex]]

***** what kinds of non-Linux architectures are analysed?
:PROPERTIES:
:VISIBILITY: folded
:END:

Count each architecture:

#+begin_src R :colnames yes
  counts = read_tsv('exports/corpus2.tsv') %>%
    filter(fw_types != 'linux') %>%
    select(item,isa) %>%
    separate_longer_delim(isa, ',') %>%
    mutate(isa=if_else(str_detect(isa, '^ARM'), 'ARM', isa)) %>%
    distinct(item,isa) %>%
    count(isa) %>%
    rename(`Architecture`=isa, `Count`=n)
#+end_src

#+RESULTS:
| Architecture | Count |
|--------------+-------|
| AARCH64      |     1 |
| ARM          |    17 |
| AVR          |     1 |
| Intel-8051   |     2 |
| Intel-x64    |     1 |
| Intel-x86    |     4 |
| MIPS         |     6 |
| PowerPC      |     2 |
| RISC-MSP430  |     2 |
| RISC-V       |     1 |

#+begin_src R :colnames yes :results output file :file exports/tables/nlb-archs.tex
  xtable.opt.table()
  xtable(counts, caption='Number of NLB firmware studies by CPU architecture.', label='tab:nlb-archs')
#+end_src

#+RESULTS:
[[file:exports/tables/nlb-archs.tex]]

***** what's the median number of analysed architectures?
:PROPERTIES:
:VISIBILITY: folded
:END:
Select only ISA-related columns with some true values:

#+begin_src R
  archs = read_tsv('exports/corpus2.tsv') %>%
    filter(fw_types != 'linux') %>%
    select(item,isa) %>%
    separate_longer_delim(isa, ',') %>%
    mutate(isa=if_else(str_detect(isa, '^ARM'), 'ARM', isa)) %>%
    distinct(item,isa) %>%
    count(item)
#+end_src

#+RESULTS:
| clements: halucinator: firmware re-hosting through abstraction layer emulation   | 1 |
| costin: Large-scale analysis of Security of Embedded Firmware                    | 2 |
| davidson: fie on firmware: finding vulnerabilities in embedded systems using symbolic execution | 1 |
| eschweiler: discovre: efficient cross-architecture identification of bugs in binary code | 4 |
| feng: Scalable Graph-based Bug Search for Firmware Images                        | 3 |
| feng: p2im: scalable and hardware-independent firmware testing via automatic peripheral interface modeling | 4 |
| fowze: proxray: protocol model learning and guided firmware analysis             | 2 |
| gritti: heapster: analyzing the security of dynamic allocators for monolithic firmware images | 1 |
| gustafson: toward the analysis of embedded firmware through automated re-hosting | 1 |
| hernandez: firmusb: vetting usb device firmware using domain informed symbolic execution | 1 |
| muench: what you corrupt is not what you crash: challenges in fuzzing embedded devices | 1 |
| pewny: cross-architecture bug search in binary executables                       | 3 |
| redini: Karonte: Detecting insecure multi-binary interactions in embedded firmware | 3 |
| redini: bootstomp: on the security of bootloaders in mobile devices              | 1 |
| shirani: binarm: scalable and efficient detection of vulnerabilities in firmware images of intelligent electronic devices | 1 |
| shoshitaishvili: firmalice - automatic detection of authentication bypass vulnerabilities in binary firmware | 2 |
| wen: FirmXRay: Detecting Bluetooth Link Layer Vulnerabilities From Bare-Metal Firmware | 1 |
| zaddach: avatar: a framework to support dynamic security analysis of embedded systems' firmwares | 1 |
| zhao: a large-scale empirical analysis of the vulnerabilities introduced by third-party components in iot firmware | 3 |
| zhu: a methodology for determining the image base of arm-based industrial control system <U+FB01>rmware | 1 |

#+begin_src R :results none
  write_result(median(archs$n), 'median-num-nonlinux-archs')
#+end_src

***** for LB studies, what firmware retrieval methods are used?
:PROPERTIES:
:VISIBILITY: folded
:END:

#+begin_src R :colnames yes
  read_tsv('exports/corpus2.tsv') %>%
    filter(fw_types == 'linux') %>%
    select(scraping_approaches) %>%
    separate_longer_delim(scraping_approaches, ',') %>%
    count(scraping_approaches) %>%
    mutate(scraping_approaches=case_match(
             scraping_approaches,
             'app-store' ~ 'App store',
             'custom-search' ~ 'Custom web search',
             'direct-approach' ~ 'Direct extraction',
             'existing-dataset' ~ 'Existing dataset',
             'own-generation' ~ 'Manual generation',
             'unknown' ~ 'Unknown',
             'user-submission' ~ 'User submission',
             'vendor-website' ~ 'Vendor website',
             'FTP' ~ 'FTP')) %>%
    rename(`Scraping approach`=scraping_approaches, `Counts`=n)
#+end_src

#+RESULTS:
| Scraping approach | Counts |
|-------------------+--------|
| FTP               |      1 |
| Existing dataset  |      1 |
| Unknown           |      3 |
| Vendor website    |     11 |

***** for NLB studies, what firmware retrieval methods are used?
:PROPERTIES:
:VISIBILITY: folded
:END:

#+begin_src R :colnames yes
  read_tsv('exports/corpus2.tsv') %>%
    separate_longer_delim(fw_types, ",") %>%
    filter(fw_types == 'non-linux') %>%
    select(scraping_approaches) %>%
    separate_longer_delim(scraping_approaches, ',') %>%
    count(scraping_approaches) %>%
    mutate(scraping_approaches=case_match(
             scraping_approaches,
             'app-store' ~ 'App store',
             'custom-search' ~ 'Custom web search',
             'direct-approach' ~ 'Direct extraction',
             'existing-dataset' ~ 'Existing dataset',
             'own-generation' ~ 'Manual generation',
             'unknown' ~ 'Unknown',
             'user-submission' ~ 'User submission',
             'vendor-website' ~ 'Vendor website',
             'FTP' ~ 'FTP')) %>%
    rename(`Scraping approach`=scraping_approaches, `Counts`=n)
#+end_src

#+RESULTS:
| Scraping approach | Counts |
|-------------------+--------|
| FTP               |      4 |
| App store         |      1 |
| Custom web search |      2 |
| Direct extraction |      1 |
| Existing dataset  |      4 |
| Manual generation |      3 |
| Unknown           |      3 |
| User submission   |      2 |
| Vendor website    |     13 |

***** what kinds of non-Linux devices are most often analysed?
:PROPERTIES:
:VISIBILITY: folded
:END:

#+begin_src R :colnames yes
  device_nums = read_tsv('exports/corpus2.tsv') %>%
    separate_longer_delim(fw_types, ',') %>%
    filter(fw_types == 'non-linux') %>%
    select(devices_sector) %>%
    separate_longer_delim(devices_sector, ',') %>%
    count(devices_sector) %>%
    mutate(devices_sector=case_match(
             devices_sector,
             'IoT' ~ 'IoT',
             'computer-peripherals'~'Computer peripherals',
             'industrial'~'Industrial',
             'medical'~'Medical',
             'personal'~'Personal',
             'other'~'Other')) %>%
    rename(`Device sector`=devices_sector, Count=n)
#+end_src

#+RESULTS:
| Device sector        | Count |
|----------------------+-------|
| IoT                  |    13 |
| Computer peripherals |     4 |
| Industrial           |     5 |
| Medical              |     2 |
| Other                |     6 |
| Personal             |     6 |

#+begin_src R :colnames yes :results output file :file exports/tables/nlb-device-sectors.tex
  xtable.opt.table()
  xtable(device_nums, caption='Number of NLB studies by device sector.', label='tab:nlb-device-sectors')
#+end_src

#+RESULTS:
[[file:exports/tables/nlb-device-sectors.tex]]

***** for NLB studies, what is analysed and how?
#+begin_src R :colnames yes
  res = read_tsv("exports/corpus2.tsv") %>%
    select(item, fw_types, analyses, whats_analysed) %>%
    separate_longer_delim(fw_types, ',') %>%
    filter(fw_types == 'non-linux') %>%
    filter(!is.na(analyses) & !is.na(whats_analysed)) %>%
    separate_longer_delim(whats_analysed, ',') %>%
    separate_longer_delim(analyses, ',') %>%
    count(analyses, whats_analysed) %>%
    pivot_wider(names_from=analyses, values_from=n, values_fill=0) %>%
    select(whats_analysed, static, dynamic, `symbolic-execution`, taint) %>%
    rename(`Analysis focus`=whats_analysed,
           Static=static, Dynamic=dynamic,
           `Symb. exec.`=`symbolic-execution`,
           Taint=taint) %>%
    mutate(`Analysis focus`=case_match(
             `Analysis focus`,
             "code" ~ "Code",
             "config" ~ "Configuration",
             "credentials" ~ "Credentials",
             "interfaces" ~ "Interfaces"))
#+end_src

#+RESULTS:
| Analysis focus | Static | Dynamic | Symb. exec. | Taint |
|----------------+--------+---------+-------------+-------|
| Code           |     12 |       5 |           6 |     2 |
| Interfaces     |      0 |       3 |           1 |     0 |
| Configuration  |      2 |       0 |           0 |     0 |
| Credentials    |      1 |       0 |           0 |     0 |

#+begin_src R :colnames yes :results output file :file exports/tables/nlb-analyses.tex
  xtable.opt.table()
  xtable(res, caption='Number of studies of NLB firmware by analysis methods and analysis focus.', label='tab:nlb-analyses')
#+end_src

#+RESULTS:
[[file:exports/tables/nlb-analyses.tex]]

** Papers
:PROPERTIES:
:LOGGING:  nil
:VISIBILITY: folded
:END:
*** Non-linux
**** large
***** [#1] gritti: heapster: analyzing the security of dynamic allocators for monolithic firmware images
:PROPERTIES:
:NOTER_DOCUMENT: papers/gritti2022heapster.pdf
:P_analyses: static
:P_analyses+: symbolic-execution
:P_fw_types: non-linux
:P_scraping_approaches: existing-dataset
:P_whats_analysed: code
:P_n_scraped: 804
:P_n_analysed: 804
:P_isa:    ARM
:P_dataset: linked
:P_devices: "wearable, upgrade tool, others, sensor, medical devices, bike accessory, smart eyeglasses, tracker, switch, car accessory, robot, smart lock, smart light, battery, smart home, game accessory, agricultural equipment, thermometer, beacon, firearm accessory, headphone, alarm"
:P_devices_sector: personal
:P_devices_sector+: other
:P_devices_sector+: IoT
:P_devices_sector+: medical
:P_devices_sector+: industrial
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings{gritti2022heapster,
    title     = {{HEAPSTER: Analyzing the Security of Dynamic Allocators for Monolithic Firmware Images}},
    author    = {Gritti, Fabio and Pagani, Fabio and Grishchenko, Ilya and Dresel, Lukas and Redini, Nilo and Kruegel, Christopher and Vigna, Giovanni},
    booktitle = {Proceedings of the IEEE Symposium on Security \& Privacy (S\&P)},
    month     = {May},
    year      = {2022}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] wen: FirmXRay: Detecting Bluetooth Link Layer Vulnerabilities From Bare-Metal Firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/wen2020firmxray.pdf
:ID:       764144F2-D0EB-4D42-80EA-7A5909793CD6
:P_analyses: static
:P_fw_types: non-linux
:P_scraping_approaches: app-store
:P_whats_analysed: code
:P_whats_analysed+: config
:P_n_scraped: 793
:P_n_analysed: 793
:P_dataset: available-direct
:P_devices: "wearable, sensor, tag, robot, medical device, others"
:P_devices_sector: personal
:P_devices_sector+: IoT
:P_devices_sector+: medical
:P_devices_sector+: other
:P_isa: ARM-Cortex-M
:END:
#+begin_src bibtex
  @Article{wen2020firmxray,
    author       = {Wen, Haohuang and Lin, Zhiqiang and Zhang, Yinqian},
    title        = {FirmXRay: Detecting Bluetooth Link Layer
                    Vulnerabilities From Bare-Metal Firmware},
    journal      = {Proceedings of the 2020 ACM SIGSAC Conference on
                    Computer and Communications Security},
    year         = 2020,
    month        = {Oct},
    doi          = {10.1145/3372297.3423344},
    url          = {http://dx.doi.org/10.1145/3372297.3423344},
    publisher    = {ACM}
  }
#+end_src
[[elisp:org-noter][Open document]]

**** small
***** [#1] clements: halucinator: firmware re-hosting through abstraction layer emulation
:PROPERTIES:
:NOTER_DOCUMENT: papers/clements2020halucinator.pdf
:P_analyses: dynamic
:P_fw_types: non-linux
:P_scraping_approaches: own-generation
:P_whats_analysed: interfaces
:P_whats_analysed+: code
:P_n_scraped: 16
:P_n_analysed: 16
:P_isa:    ARM-Cortex-M
:P_devices: "development boards from Atmei, NXP, STM"
:P_devices_sector: other
:P_dataset: unavailable
:END:
#+begin_src bibtex
  @inproceedings {clements2020halucinator,
  author = {Abraham A Clements and Eric Gustafson and Tobias Scharnowski and Paul Grosen and David Fritz and Christopher Kruegel and Giovanni Vigna and Saurabh Bagchi and Mathias Payer},
  title = {{HALucinator}: Firmware Re-hosting Through Abstraction Layer Emulation},
  booktitle = {29th USENIX Security Symposium (USENIX Security 20)},
  year = {2020},
  isbn = {978-1-939133-17-5},
  pages = {1201--1218},
  url = {https://www.usenix.org/conference/usenixsecurity20/presentation/clements},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src
[[elisp:org-noter][Open document]]


***** [#1] davidson: fie on firmware: finding vulnerabilities in embedded systems using symbolic execution
:PROPERTIES:
:NOTER_DOCUMENT: papers/davidson2013fie.pdf
:P_analyses: symbolic-execution
:P_fw_types: non-linux
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: custom-search
:P_whats_analysed: interfaces
:P_n_scraped: 99
:P_n_analysed: 99
:P_devices: "MSP430 microcontrollers (card reader, USB drivers, community projects, Contiki OS)"
:P_devices_sector: other
:P_devices_sector+: computer-peripherals
:P_isa:    RISC-MSP430
:P_dataset: unavailable
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings {davidson2013fie,
  author = {Drew Davidson and Benjamin Moench and Thomas Ristenpart and Somesh Jha},
  title = {{FIE} on Firmware: Finding Vulnerabilities in Embedded Systems Using Symbolic Execution},
  booktitle = {22nd USENIX Security Symposium (USENIX Security 13)},
  year = {2013},
  isbn = {978-1-931971-03-4},
  address = {Washington, D.C.},
  pages = {463--478},
  url = {https://www.usenix.org/conference/usenixsecurity13/technical-sessions/paper/davidson},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src
[[elisp:org-noter][Open document]]



***** [#1] feng: p2im: scalable and hardware-independent firmware testing via automatic peripheral interface modeling
:PROPERTIES:
:NOTER_DOCUMENT: papers/feng2020p2im.pdf
:P_analyses: dynamic
:P_fw_types: non-linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: interfaces
:P_n_analysed: 80
:P_n_scraped: 80
:P_isa:    ARM-Cortex-M
:P_devices: "self-balancing robot, industrial programmable logic controller, gateway device, drone, CNC port of Grbl milling controller, commercial reflow oven, console for RIOT OS, steering control for self driving vehicle, soldering iron, industrial heat press"
:P_devices_sector: other
:P_devices_sector+: industrial
:P_dataset: available-direct
:Effort:   0:05
:P_isa+:    AVR
:P_isa+: MIPS
:P_isa+: RISC-V
:END:
#+begin_src bibtex
  @inproceedings {feng2020p2im,
  author = {Bo Feng and Alejandro Mera and Long Lu},
  title = {{P2IM}: Scalable and Hardware-independent Firmware Testing via Automatic Peripheral Interface Modeling},
  booktitle = {29th USENIX Security Symposium (USENIX Security 20)},
  year = {2020},
  isbn = {978-1-939133-17-5},
  pages = {1237--1254},
  url = {https://www.usenix.org/conference/usenixsecurity20/presentation/feng},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] zaddach: avatar: a framework to support dynamic security analysis of embedded systems' firmwares
:PROPERTIES:
:NOTER_DOCUMENT: papers/zaddach2014avatar.pdf
:P_analyses: dynamic
:P_analyses+: symbolic-execution
:P_fw_types: non-linux
:P_scraping_approaches: direct-approach
:P_whats_analysed: code
:P_n_scraped: 3
:P_n_analysed: 3
:P_isa:    ARMv5
:P_isa+:    ARMv4T
:P_devices: "bootloader of HDD, Zigbee, Motorola C118 GSM stack"
:P_devices_sector: computer-peripherals
:P_devices_sector+: IoT
:P_devices_sector+: personal
:P_dataset: available-direct
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings{zaddach2014avatar,
  author = {Zaddach, Jonas and Bruno, Luca and Francillon, Aurélien and Balzarotti, Davide},
  year = {2014},
  month = {02},
  pages = {},
  title = {Avatar: A Framework to Support Dynamic Security Analysis of Embedded Systems’ Firmwares},
  isbn = {1-891562-35-5},
  doi = {10.14722/ndss.2014.23229}
  }
#+end_src
[[elisp:org-noter][Open document]]


***** [#1] hernandez: firmusb: vetting usb device firmware using domain informed symbolic execution
:PROPERTIES:
:NOTER_DOCUMENT: papers/hernandez2017firmusb.pdf
:P_analyses: static
:P_analyses+: symbolic-execution
:P_fw_types: non-linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_analysed: 2
:P_n_scraped: 2
:P_isa:    Intel-8051
:P_dataset: available-partial
:P_devices: "Phison 2251-03 controller, EzHID keyboard for Cypress EZ-USB"
:P_devices_sector: computer-peripherals
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings{hernandez2017firmusb,
          doi = {10.1145/3133956.3134050},

          url = {https://doi.org/10.1145%2F3133956.3134050},

          year = 2017,
          month = {oct},

          publisher = {{ACM}
  },

          author = {Grant Hernandez and Farhaan Fowze and Dave (Jing) Tian and Tuba Yavuz and Kevin R.B. Butler},

          title = {{FirmUSB}},

          booktitle = {Proceedings of the 2017 {ACM} {SIGSAC} Conference on Computer and Communications Security}
  }
#+end_src
[[elisp:org-noter][Open document]]

rationale: impossible to know if USB device benign or malicious. this is fw analysis framework using omain knowledge of USB protocol to analyze fw images

***** [#1] redini: bootstomp: on the security of bootloaders in mobile devices
:PROPERTIES:
:NOTER_DOCUMENT: papers/redini2017bootstomp.pdf
:P_analyses: static
:P_analyses+: dynamic
:P_analyses+: symbolic-execution
:P_analyses+: taint
:P_fw_types: non-linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_scraped: 5
:P_n_analysed: 5
:P_isa:    ARMv8A
:P_dataset: available-direct
:P_devices: "Huawei P8 lite phone, Sony Xperia XA phone, Nexu 9 tablet"
:P_devices_sector: personal
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings {redini2017bootstomp,
  author = {Nilo Redini and Aravind Machiry and Dipanjan Das and Yanick Fratantonio and Antonio Bianchi and Eric Gustafson and Yan Shoshitaishvili and Christopher Kruegel and Giovanni Vigna},
  title = {{BootStomp}: On the Security of Bootloaders in Mobile Devices},
  booktitle = {26th USENIX Security Symposium (USENIX Security 17)},
  year = {2017},
  isbn = {978-1-931971-40-9},
  address = {Vancouver, BC},
  pages = {781--798},
  url = {https://www.usenix.org/conference/usenixsecurity17/technical-sessions/presentation/redini},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src
[[elisp:org-noter][Open document]]


***** [#2] gustafson: toward the analysis of embedded firmware through automated re-hosting
:PROPERTIES:
:NOTER_DOCUMENT: papers/gustafson2019toward.pdf
:P_analyses: dynamic
:P_whats_analysed: code
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: own-generation
:P_n_scraped: 6
:P_n_analysed: 6
:P_fw_types: non-linux
:P_devices: "door lock controller, thermostat"
:P_devices_sector: IoT
:P_isa:    ARMv7-M-Thumb
:P_isa+:    ARMv6-M-Thumb
:P_dataset: available-direct
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings {gustafson2019toward,
  author = {Eric Gustafson and Marius Muench and Chad Spensky and Nilo Redini and Aravind Machiry and Yanick Fratantonio and Davide Balzarotti and Aur{\'e}lien Francillon and Yung Ryn Choe and Christophe Kruegel and Giovanni Vigna},
  title = {Toward the Analysis of Embedded Firmware through Automated Re-hosting},
  booktitle = {22nd International Symposium on Research in Attacks, Intrusions and Defenses (RAID 2019)},
  year = {2019},
  isbn = {978-1-939133-07-6},
  address = {Chaoyang District, Beijing},
  pages = {135--150},
  url = {https://www.usenix.org/conference/raid2019/presentation/gustafson},
  publisher = {USENIX Association},
  month = sep,
  }
#+end_src
[[elisp:org-noter][Open document]]


***** [#3] fowze: proxray: protocol model learning and guided firmware analysis
:PROPERTIES:
:NOTER_DOCUMENT: papers/fowze2021proxray.pdf
:P_analyses: symbolic-execution
:P_fw_types: non-linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_scraped: 29
:P_n_analysed: 29
:P_isa:    RISC-MSP430
:P_isa+:    Intel-8051
:P_devices: "USB communication device class, USB human interface device class, USB mass storage class"
:P_devices_sector: computer-peripherals
:P_dataset: unavailable
:Effort:   0:05
:END:
#+begin_src bibtex
  @ARTICLE{fowze2021proxray,
    author =       {Fowze, Farhaan and Tian, Dave and Hernandez, Grant
                    and Butler, Kevin and Yavuz, Tuba},
    journal =      {IEEE Transactions on Software Engineering},
    title =        {ProXray: Protocol Model Learning and Guided Firmware
                    Analysis},
    year =         2021,
    volume =       47,
    number =       9,
    pages =        {1907-1928},
    doi =          {10.1109/TSE.2019.2939526}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#3] zhu: a methodology for determining the image base of arm-based industrial control system ﬁrmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/zhu2017methodology.pdf
:P_analyses: static
:P_fw_types: non-linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_scraped: 10
:P_n_analysed: 10
:P_devices: "industrial control system devices (programmable logic controllers, switch, gateway, etc.)"
:P_devices_sector: industrial
:P_isa:    ARM
:P_dataset: unavailable
:Effort:   0:05
:END:
#+begin_src bibtex
  @article{zhu2017methodology,
  title = {A methodology for determining the image base of ARM-based
                    industrial control system firmware},
  journal = {International Journal of Critical Infrastructure
                    Protection},
  volume = 16,
  pages = {26-35},
  year = 2017,
  issn = {1874-5482},
  doi = {https://doi.org/10.1016/j.ijcip.2016.12.002},
  url =
                    {https://www.sciencedirect.com/science/article/pii/S1874548216300014},
  author = {Ruijin Zhu and Baofeng Zhang and Junjie Mao and Quanxin
                    Zhang and Yu-an Tan},
  keywords = {Industrial Control Systems, ARM Architecture, Firmware,
                    Image Base, Reverse Engineering}
  }
#+end_src
[[elisp:org-noter][Open document]]


*** Both
**** large
***** [#1] costin: Large-scale analysis of Security of Embedded Firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/costin2014large.pdf
:P_analyses: static
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: FTP
:P_scraping_approaches+: custom-search
:P_scraping_approaches+: user-submission
:P_whats_analysed: credentials
:P_whats_analysed+: config
:P_fw_types: linux
:P_fw_types+: non-linux
:P_n_scraped: 172751
:P_n_analysed: 32356
:P_isa:    ARM
:P_isa+:    MIPS
:P_devices: "PC BIOS, Camera, Router, ADSL, Gateway, programmable logic controller, DSLAM, ISDN Server, Voip, Modem, Home automation"
:P_devices_sector: personal
:P_devices_sector+: IoT
:P_devices_sector+: industrial
:P_dataset: available-direct
:Effort:   0:05
:P_pct_lb: 86
:P_pct_nlb: 14
:END:
#+begin_src bibtex
  @inproceedings {costin2014large,
  author = {Andrei Costin and Jonas Zaddach and Aur{\'e}lien Francillon and Davide Balzarotti},
  title = {A {Large-Scale} Analysis of the Security of Embedded Firmwares},
  booktitle = {23rd USENIX Security Symposium (USENIX Security 14)},
  year = {2014},
  isbn = {978-1-931971-15-7},
  address = {San Diego, CA},
  pages = {95--110},
  url = {https://www.usenix.org/conference/usenixsecurity14/technical-sessions/presentation/costin},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src

[[elisp:org-noter][Open document]]

***** [#1] feng: Scalable Graph-based Bug Search for Firmware Images
:PROPERTIES:
:NOTER_DOCUMENT: papers/feng2016scalable.pdf
:P_analyses: static
:P_whats_analysed: code
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: FTP
:P_scraping_approaches+: existing-dataset
:P_scraping_approaches+: own-generation
:P_n_scraped: 33045
:P_n_analysed: 8126
:P_fw_types: linux
:P_fw_types+: non-linux
:P_isa:    ARM
:P_isa+:    MIPS
:P_isa+:    Intel-x86
:P_devices: "IP cameras, routers, access points, various IoT"
:P_devices_sector: IoT
:P_dataset: linked
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings{feng2016scalable,
  title = "Scalable graph-based bug search for firmware images",
  keywords = "Firmware security, Graph encoding, Machine learning",
  author = "Qian Feng and Rundong Zhou and Chengcheng Xu and Yao Cheng and Brian Testa and Heng Yin",
  year = "2016",
  month = oct,
  day = "24",
  doi = "10.1145/2976749.2978370",
  language = "English (US)",
  series = "Proceedings of the ACM Conference on Computer and Communications Security",
  publisher = "Association for Computing Machinery",
  pages = "480--491",
  booktitle = "CCS 2016 - Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security",
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#3] shirani: binarm: scalable and efficient detection of vulnerabilities in firmware images of intelligent electronic devices
:PROPERTIES:
:NOTER_DOCUMENT: papers/shirani2018binarm.pdf
:P_analyses: static
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: FTP
:P_whats_analysed: code
:P_n_analysed: 5756
:P_fw_types: linux
:P_fw_types+: non-linux
:P_isa:    ARM
:P_devices: "intelligent electronic devices in smart grid"
:P_devices_sector: IoT
:P_dataset: unavailable
:Effort:   0:05
:P_pct_lb: 90
:P_pct_nlb: 10
:END:
#+begin_src bibtex
  @inproceedings{shirani2018binarm,
    author = {Paria Shirani and
                 Leo Collard and
                 Basile L. Agba and
                 Bernard Lebel and
                 Mourad Debbabi and
                 Lingyu Wang and
                 Aiman Hanna},
    editor = {Cristiano Giuffrida and
                 S{\'{e}}bastien Bardin and
                 Gregory Blanc},
    title = {{BINARM:} Scalable and Efficient Detection of
                    Vulnerabilities in Firmware
                 Images of Intelligent Electronic Devices},
    booktitle = {Detection of Intrusions and Malware, and Vulnerability
                    Assessment
                 - 15th International Conference, {DIMVA} 2018, Saclay,
                    France, June
                 28-29, 2018, Proceedings},
    series = {Lecture Notes in Computer Science},
    volume = 10885,
    pages = {114--138},
    publisher = {Springer},
    year = 2018,
    url = {https://doi.org/10.1007/978-3-319-93411-2\_6},
    doi = {10.1007/978-3-319-93411-2\_6},
    timestamp = {Tue, 14 May 2019 10:00:47 +0200},
    biburl = {https://dblp.org/rec/conf/dimva/ShiraniCALD0H18.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] zhao: a large-scale empirical analysis of the vulnerabilities introduced by third-party components in iot firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/zhao2022largescale.pdf
:P_fw_types: linux
:P_fw_types+: non-linux
:P_whats_analysed: code
:P_scraping_approaches: user-submission
:P_scraping_approaches+: FTP
:P_scraping_approaches+: vendor-website
:P_analyses: static
:P_n_scraped: 34136
:P_n_analysed: 32817
:P_dataset: available-direct
:P_devices: "camera, router, unknown, switch, sweeper, light, general, plugin, heater, bluetooth light, air, curtain, lock, freezer, air purifier, humidifier, dehumidifier, heat controller, fan, washer, gateway, others"
:P_devices_sector: IoT
:P_devices_sector+: industrial
:P_isa:    ARM
:P_isa+:   Intel-x86
:P_isa+:   MIPS
:Effort:   0:05
:P_pct_nlb: 63.8
:P_pct_lb: 36.2
:END:
#+begin_src bibtex
  @inproceedings{zhao2022largescale,
  author = {Zhao, Binbin and Ji, Shouling and Xu, Jiacheng and Tian, Yuan and Wei, Qiuyang and Wang, Qinying and Lyu, Chenyang and Zhang, Xuhong and Lin, Changting and Wu, Jingzheng and Beyah, Raheem},
  title = {A Large-Scale Empirical Analysis of the Vulnerabilities Introduced by Third-Party Components in IoT Firmware},
  year = {2022},
  isbn = {9781450393799},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3533767.3534366},
  doi = {10.1145/3533767.3534366},
  booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},
  pages = {442–454},
  numpages = {13},
  keywords = {Third-party component, Vulnerability, IoT firmware},
  location = {Virtual, South Korea},
  series = {ISSTA 2022}
  }
#+end_src
[[elisp:org-noter][Open document]]

**** small
***** [#1] redini: Karonte: Detecting insecure multi-binary interactions in embedded firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/redini2020karonte.pdf
:P_analyses: static
:P_analyses+: taint
:P_whats_analysed: code
:P_n_scraped: 952
:P_n_analysed: 53
:P_fw_types: linux
:P_fw_types+: non-linux
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: existing-dataset
:P_isa:    ARM
:P_isa+:    AARCH64
:P_isa+: PowerPC
:P_dataset: available-direct
:P_devices: "IoT, Huawei phone, Nvidia tablet"
:P_devices_sector: IoT
:P_devices_sector+: personal
:Effort:   0:05
:P_pct_lb: 92.5
:P_pct_nlb: 7.5
:END:
#+begin_src bibtex
  @inproceedings{redini2020karonte,
  author = {Redini, Nilo and Machiry, Aravind and Wang, Ruoyu and Spensky, Chad and Continella, Andrea and Shoshitaishvili, Yan and Kruegel, Christopher and Vigna, Giovanni},
  year = {2020},
  month = {05},
  pages = {1544-1561},
  title = {Karonte: Detecting Insecure Multi-binary Interactions in Embedded Firmware},
  doi = {10.1109/SP40000.2020.00036}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] muench: what you corrupt is not what you crash: challenges in fuzzing embedded devices
:PROPERTIES:
:NOTER_DOCUMENT: papers/muench2018what.pdf
:P_analyses: dynamic
:P_fw_types: linux
:P_fw_types+: non-linux
:P_scraping_approaches: unknown
:P_whats_analysed: code
:P_whats_analysed+: interfaces
:P_n_analysed: 4
:P_n_scraped: 4
:P_devices: "single board computer, router, IP camera, development board"
:P_devices_sector: other
:P_devices_sector+: IoT
:P_isa:    ARMv7
:P_isa+:    ARMv4
:P_isa+:    ARMv7-M-Thumb
:P_dataset: available-direct
:Effort:   0:05
:P_pct_lb: 75
:P_pct_nlb: 25
:END:
#+begin_src bibtex
  @conference{muench2018what,
    author = {Muench, Marius and  Stijohann, Jan and  Kargl, Frank and  Francillon, Aurélien and  Balzarotti, Davide},
    title = {What you corrupt is not what you crash: Challenges in fuzzing embedded devices},
    booktitle = {NDSS 2018, Network and Distributed Systems Security Symposium, 18-21 February 2018, San Diego, CA, USA},
    year = {2018},
    editor = {ISOC},
    address = {San Diego},
    note = {© ISOC. Personal use of this material is permitted. The definitive version of this paper was published in NDSS 2018, Network and Distributed Systems Security Symposium, 18-21 February 2018, San Diego, CA, USA and is available at : http://dx.doi.org/10.14722/NDSS.2018.23166},
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] shoshitaishvili: firmalice - automatic detection of authentication bypass vulnerabilities in binary firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/shoshitaishvili2015firmalice.pdf
:P_analyses: static
:P_analyses+: symbolic-execution
:P_fw_types: linux
:P_fw_types+: non-linux
:P_scraping_approaches: unknown
:P_whats_analysed: code
:P_n_scraped: 3
:P_n_analysed: 3
:P_devices: "smart meter, CCTV camera, laser mono printer"
:P_devices_sector: IoT
:P_isa: ARM
:P_isa+: PowerPC
:P_dataset: unavailable
:Effort:   0:05
:P_pct_nlb: 66
:P_pct_lb: 33
:END:
#+begin_src bibtex
  @inproceedings{shoshitaishvili2015firmalice,
    author    = {Yan Shoshitaishvili and
                 Ruoyu Wang and
                 Christophe Hauser and
                 Christopher Kruegel and
                 Giovanni Vigna},
    title     = {Firmalice - Automatic Detection of Authentication Bypass Vulnerabilities
                 in Binary Firmware},
    booktitle = {22nd Annual Network and Distributed System Security Symposium, {NDSS}
                 2015, San Diego, California, USA, February 8-11, 2015},
    publisher = {The Internet Society},
    year      = {2015},
    url       = {https://www.ndss-symposium.org/ndss2015/firmalice-automatic-detection-authentication-bypass-vulnerabilities-binary-firmware},
    timestamp = {Mon, 01 Feb 2021 08:42:25 +0100},
    biburl    = {https://dblp.org/rec/conf/ndss/Shoshitaishvili15.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] pewny: cross-architecture bug search in binary executables
:PROPERTIES:
:NOTER_DOCUMENT: papers/pewny2015crossarchitecture.pdf
:P_analyses: static
:P_fw_types: linux
:P_fw_types+: non-linux
:P_scraping_approaches: unknown
:P_whats_analysed: code
:P_n_scraped: 60
:P_n_analysed: 60
:P_isa:    ARM
:P_isa+: Intel-x86
:P_isa+: MIPS
:P_devices: "router firmware DD-WRT, Netgear ReadyNAS"
:P_devices_sector: IoT
:P_dataset: unavailable
:Effort:   0:05
:END:
#+begin_src bibtex
  @INPROCEEDINGS{pewny2015crossarchitecture,
    author={Pewny, Jannik and Garmany, Behrad and Gawlik, Robert and Rossow, Christian and Holz, Thorsten},
    booktitle={2015 IEEE Symposium on Security and Privacy},
    title={Cross-Architecture Bug Search in Binary Executables},
    year={2015},
    volume={},
    number={},
    pages={709-724},
    doi={10.1109/SP.2015.49}}
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] eschweiler: discovre: efficient cross-architecture identification of bugs in binary code
:PROPERTIES:
:NOTER_DOCUMENT: papers/eschweiler2016discovre.pdf
:P_analyses: static
:P_fw_types: linux
:P_fw_types+: non-linux
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: existing-dataset
:P_whats_analysed: code
:P_n_analysed: 62
:P_n_scraped: 62
:P_isa:    Intel-x86
:P_isa+:    Intel-x64
:P_isa+:    ARMv7
:P_isa+:    MIPS
:P_dataset: unavailable
:P_devices: "Router firmware DD-WRT, Netgreat ReadyNAS"
:P_devices_sector: IoT
:Effort:   0:05
:END:
#+begin_src bibtex
  @inproceedings{eschweiler2016discovre,
    author    = {Sebastian Eschweiler and
                 Khaled Yakdan and
                 Elmar Gerhards{-}Padilla},
    title     = {discovRE: Efficient Cross-Architecture Identification of Bugs in Binary
                 Code},
    booktitle = {23rd Annual Network and Distributed System Security Symposium, {NDSS}
                 2016, San Diego, California, USA, February 21-24, 2016},
    publisher = {The Internet Society},
    year      = {2016},
    url       = {http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2017/09/discovre-efficient-cross-architecture-identification-bugs-binary-code.pdf},
    timestamp = {Thu, 17 Jun 2021 16:04:48 +0200},
    biburl    = {https://dblp.org/rec/conf/ndss/EschweilerYG16.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
  }
#+end_src
[[elisp:org-noter][Open document]]

*** Only linux
**** large
***** [#1] chen: Towards Automated Dynamic Analysis for Linux-based Embedded Firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/chen2016towards.pdf
:P_analyses: dynamic
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: FTP
:P_n_scraped: 23035
:P_n_analysed: 9486
:P_whats_analysed: interfaces
:P_isa:    ARM MIPS
:P_devices_sector: IoT
:P_dataset: available-partial
:END:
#+begin_src bibtex
  @inproceedings{chen2016towards,
  author = {Chen, Daming and Egele, Manuel and Woo, Maverick and Brumley, David},
  year = {2016},
  month = {01},
  pages = {},
  title = {Towards Automated Dynamic Analysis for Linux-based Embedded Firmware},
  doi = {10.14722/ndss.2016.23415}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] david: firmup: precise static detection of common vulnerabilities in firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/david2018firmup.pdf
:P_analyses: static
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_scraped: 5000
:P_n_analysed: 2000
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
    @inproceedings{david2018firmup,
    author    = {Yaniv David and
                 Nimrod Partush and
                 Eran Yahav},
    editor    = {Xipeng Shen and
                 James Tuck and
                 Ricardo Bianchini and
                 Vivek Sarkar},
    title     = {FirmUp: Precise Static Detection of Common Vulnerabilities in Firmware},
    booktitle = {Proceedings of the Twenty-Third International Conference on Architectural
                 Support for Programming Languages and Operating Systems, {ASPLOS}
                 2018, Williamsburg, VA, USA, March 24-28, 2018},
    pages     = {392--404},
    publisher = {{ACM}},
    year      = {2018},
    url       = {https://doi.org/10.1145/3173162.3177157},
    doi       = {10.1145/3173162.3177157},
    timestamp = {Wed, 23 Jun 2021 15:34:31 +0200},
    biburl    = {https://dblp.org/rec/conf/asplos/DavidPY18.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#3] srivastava: firmfuzz: automated iot firmware introspection and analysis
:PROPERTIES:
:NOTER_DOCUMENT: papers/srivastava2019firmfuzz.pdf
:P_analyses: static
:P_analyses+: dynamic
:P_analyses+: taint
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_whats_analysed+: credentials
:P_n_analysed: 1013
:P_n_scraped: 6427
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
  @article{srivastava2019firmfuzz,
    title={FirmFuzz: Automated IoT Firmware Introspection and Analysis},
    author={Prashast Srivastava and Hui Peng and Jiahao Li and Hamed
                    Okhravi and Howard E. Shrobe and Mathias Payer},
    journal={Proceedings of the 2nd International ACM Workshop on
                    Security and Privacy for the Internet-of-Things},

  author = {Srivastava, Prashast and Peng, Hui and Li, Jiahao and
                    Okhravi, Hamed and Shrobe, Howard and Payer,
                    Mathias}, year = 2019,
  month = 11,
  pages = {15-21},
  title = {FirmFuzz: Automated IoT Firmware Introspection and Analysis},
  isbn = {978-1-4503-6838-4},
  doi = {10.1145/3338507.3358616}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] yu: building embedded systems like it’s 1996
:PROPERTIES:
:NOTER_DOCUMENT: papers/yu2022building.pdf
:P_fw_types: linux
:Effort:   0:05
:P_n_scraped: 18020
:P_n_analysed: 10685
:P_dataset: linked
:P_scraping_approaches: vendor-website
:END:
#+begin_src bibtex
  @article{yu2022building,
    doi = {10.48550/ARXIV.2203.06834},

    url = {https://arxiv.org/abs/2203.06834},

    author = {Yu, Ruotong and Del Nin, Francesca and Zhang, Yuchen and Huang, Shan and Kaliyar, Pallavi and Zakto, Sarah and Conti, Mauro and Portokalidis, Georgios and Xu, Jun},

    keywords = {Cryptography and Security (cs.CR), FOS: Computer and information sciences, FOS: Computer and information sciences},

    title = {Building Embedded Systems Like It's 1996},

    publisher = {arXiv},

    year = {2022},

    copyright = {arXiv.org perpetual, non-exclusive license}
  }

#+end_src
[[elisp:org-noter][Open document]]

***** [#2] kim: firmae: towards large-scale emulation of iot firmware for dynamic analysis
:PROPERTIES:
:NOTER_DOCUMENT: papers/kim2020firmae.pdf
:P_analyses: dynamic
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_scraped: 1306
:P_n_analysed: 1124
:Effort:   0:05
:P_dataset: available-direct
:END:
#+begin_src bibtex
  @inproceedings{kim2020firmae,
  author = {Kim, Mingeun and Kim, Dongkwan and Kim, Eunsoo and Kim, Suryeon and Jang, Yeongjin and Kim, Yongdae},
  title = {FirmAE: Towards Large-Scale Emulation of IoT Firmware for Dynamic Analysis},
  year = {2020},
  isbn = {9781450388580},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3427228.3427294},
  doi = {10.1145/3427228.3427294},
  booktitle = {Annual Computer Security Applications Conference},
  pages = {733–745},
  numpages = {13},
  keywords = {Firmware, emulation, embedded device, dynamic analysis},
  location = {Austin, USA},
  series = {ACSAC '20}
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#2] zhang: CryptoREX: large-scale analysis of cryptographic misuse in IoT
:PROPERTIES:
:NOTER_DOCUMENT: papers/zhang2019cryptorex.pdf
:P_analyses: static
:P_analyses+: taint
:P_fw_types: linux
:P_scraping_approaches: unknown
:P_whats_analysed: code
:P_n_scraped: 1327
:P_n_analysed: 521
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
  @inproceedings {zhang2019cryptorex,
  author = {Li Zhang and Jiongyi Chen and Wenrui Diao and Shanqing Guo and Jian Weng and Kehuan Zhang},
  title = {{CryptoREX}: Large-scale Analysis of Cryptographic Misuse in {IoT} Devices},
  booktitle = {22nd International Symposium on Research in Attacks, Intrusions and Defenses (RAID 2019)},
  year = {2019},
  isbn = {978-1-939133-07-6},
  address = {Chaoyang District, Beijing},
  pages = {151--164},
  url = {https://www.usenix.org/conference/raid2019/presentation/zhang-li},
  publisher = {USENIX Association},
  month = sep,
  }
#+end_src

[[elisp:org-noter][Open document]]

***** [#3] li: towards fine-grained fingerprinting of firmware in online embedded devices
:PROPERTIES:
:NOTER_DOCUMENT: papers/li2018towards.pdf
:P_analyses: dynamic
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: interfaces
:P_n_scraped: 9716
:P_n_analysed: 5296
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
  @inproceedings{li2018towards,  author={Li, Qiang and Feng, Xuan and Wang, Raining and Li, Zhi and Sun, Limin},  booktitle={IEEE INFOCOM 2018 - IEEE Conference on Computer Communications},   title={Towards Fine-grained Fingerprinting of Firmware in Online Embedded Devices},   year={2018},  volume={},  number={},  pages={2537-2545},  doi={10.1109/INFOCOM.2018.8486326}}
#+end_src
[[elisp:org-noter][Open document]]

***** [#2] costin: automated dynamic firmware analysis at scale: a case study on embedded web interfaces
:PROPERTIES:
:NOTER_DOCUMENT: papers/costin2016automated.pdf
:P_analyses: static
:P_analyses+: dynamic
:P_fw_types: linux
:P_scraping_approaches: unknown
:P_whats_analysed: code
:P_whats_analysed+: config
:P_whats_analysed+: interfaces
:Effort:   0:05
:P_n_scraped: 1925
:P_n_analysed: 1580
:P_dataset: available-direct
:END:
#+begin_src bibtex
  @inproceedings{costin2016automated,
  author = {Costin, Andrei and Zarras, Apostolis and Francillon, Aurélien},
  year = {2016},
  month = {05},
  pages = {437-448},
  title = {Automated Dynamic Firmware Analysis at Scale: A Case Study on Embedded Web Interfaces},
  doi = {10.1145/2897845.2897900},
  booktitle = {The 11th ACM on Asia Conference on Computer and Communications Security}
  }
#+end_src
[[elisp:org-noter][Open document]]

**** small
***** [#1] chen: sharing more and checking less: leveraging common input keywords to detect bugs in embedded systems
:PROPERTIES:
:Effort:   0:05
:NOTER_DOCUMENT: papers/chen2021sharing.pdf
:P_analyses: static taint
:P_whats_analysed: interfaces
:P_fw_types: linux
:P_isa: x86 ARM MIPS
:P_devices_sector: IoT
:P_scraping_approaches: vendor-website
:P_n_scraped: 39
:P_dataset: available-direct
:P_n_analysed: 39
:END:
#+begin_src bibtex
  @inproceedings {chen2021sharing,
  author = {Libo Chen and Yanhao Wang and Quanpu Cai and Yunfan Zhan and Hong Hu and Jiaqi Linghu and Qinsheng Hou and Chao Zhang and Haixin Duan and Zhi Xue},
  title = {Sharing More and Checking Less: Leveraging Common Input Keywords to Detect Bugs in Embedded Systems},
  booktitle = {30th USENIX Security Symposium (USENIX Security 21)},
  year = {2021},
  isbn = {978-1-939133-24-3},
  pages = {303--319},
  url = {https://www.usenix.org/conference/usenixsecurity21/presentation/chen-libo},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src
[[elisp:org-noter][Open document]]
***** [#1] zheng: firm-afl: high-throughput greybox fuzzing of iot firmware via augmented process emulation
:PROPERTIES:
:NOTER_DOCUMENT: papers/zheng2019firmafl.pdf
:P_analyses: dynamic
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_scraping_approaches+: existing-dataset
:P_whats_analysed: interfaces
:P_n_scraped: 9486
:P_n_analysed: 288
:Effort:   0:05
:P_dataset: available-direct
:END:
#+begin_src bibtex
  @inproceedings {zheng2019firmafl,
  author = {Yaowen Zheng and Ali Davanian and Heng Yin and Chengyu Song and Hongsong Zhu and Limin Sun},
  title = {{FIRM-AFL}: {High-Throughput} Greybox Fuzzing of {IoT} Firmware via Augmented Process Emulation},
  booktitle = {28th USENIX Security Symposium (USENIX Security 19)},
  year = 2019,
  isbn = {978-1-939133-06-9},
  address = {Santa Clara, CA},
  pages = {1099--1114},
  url = {https://www.usenix.org/conference/usenixsecurity19/presentation/zheng},
  publisher = {USENIX Association},
  month = aug,
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#3] thomas: humidify: a tool for hidden functionality detection in firmware
:PROPERTIES:
:NOTER_DOCUMENT: papers/thomas2017humidify.pdf
:P_analyses: static
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_n_scraped: 15438
:P_n_analysed: 50
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
  @inproceedings{thomas2017humidify,
  title = "HumIDIFy: A Tool for Hidden Functionality Detection in
                    Firmware",
  author = "Sam Thomas and Garcia, {Flavio D.} and Tom Chothia",
  year = 2017,
  doi = "10.1007/978-3-319-60876-1_13",
  language = "English",
  series = "Lecture Notes in Computer Science",
  publisher = "Springer",
  pages = "279--300",
  booktitle = "14th Conference on Detection of Intrusions and Malware \&
                    Vulnerability Assessment (DIMVA '17), Proceedings",
  }
#+end_src
[[elisp:org-noter][Open document]]

***** [#2] hemel: finding software license violations through binary code clone detection
:PROPERTIES:
:NOTER_DOCUMENT: papers/hemel2011finding.pdf
:P_analyses: static
:P_whats_analysed: code
:P_scraping_approaches: unknown
:P_n_scraped: 2
:P_n_analysed: 2
:P_fw_types: linux
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
    @inproceedings{hemel2011finding,
    title={Finding software license violations through binary code clone detection},
    author={Armijn Hemel and Karl Trygve Kalleberg and Rob Vermaas and Eelco Dolstra},
    booktitle={MSR '11},
    year={2011}
  }
#+end_src

[[elisp:org-noter][Open document]]

***** [#3] gui: firmcorn: vulnerability-oriented fuzzing of iot firmware via optimized virtual execution
:PROPERTIES:
:NOTER_DOCUMENT: papers/gui2020firmcorn.pdf
:P_analyses: static
:P_analyses+: dynamic
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: code
:P_whats_analysed+: interfaces
:P_n_analysed: 11
:P_n_scraped: 11
:Effort:   0:05
:P_dataset: available-direct
:END:
#+begin_src bibtex
  @article{gui2020firmcorn,
    author={Gui, Zhijie and Shu, Hui and Kang, Fei and Xiong, Xiaobing},
    journal={IEEE Access},
    title={FIRMCORN: Vulnerability-Oriented Fuzzing of IoT Firmware via Optimized Virtual Execution},
    year={2020},
    volume={8},
    number={},
    pages={29826-29841},
    doi={10.1109/ACCESS.2020.2973043}}
#+end_src
[[elisp:org-noter][Open document]]

***** [#1] yu: poster: fuzzing iot firmware via multi-stage message generation
:PROPERTIES:
:NOTER_DOCUMENT: papers/yu2019poster.pdf
:P_analyses: dynamic
:P_fw_types: linux
:P_scraping_approaches: vendor-website
:P_whats_analysed: interfaces
:P_n_scraped: 8
:P_n_analysed: 8
:Effort:   0:05
:P_dataset: unavailable
:END:
#+begin_src bibtex
  @inproceedings{yu2019poster,
    author    = {Bo Yu and
                 Pengfei Wang and
                 Tai Yue and
                 Yong Tang},
    editor    = {Lorenzo Cavallaro and
                 Johannes Kinder and
                 XiaoFeng Wang and
                 Jonathan Katz},
    title     = {Poster: Fuzzing IoT Firmware via Multi-stage Message Generation},
    booktitle = {Proceedings of the 2019 {ACM} {SIGSAC} Conference on Computer and
                 Communications Security, {CCS} 2019, London, UK, November 11-15, 2019},
    pages     = {2525--2527},
    publisher = {{ACM}},
    year      = {2019},
    url       = {https://doi.org/10.1145/3319535.3363247},
    doi       = {10.1145/3319535.3363247},
    timestamp = {Tue, 10 Nov 2020 20:00:54 +0100},
    biburl    = {https://dblp.org/rec/conf/ccs/YuWYT19.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
  }
#+end_src
[[elisp:org-noter][Open document]]
